{"version":3,"sources":["pages/Blog/components/TagIndexPage.module.css","pages/Blog/components/TagPage.module.css","pages/Blog/components/TagIndexPage.js","pages/Blog/components/TagPage.js","pages/Blog/routes/tags.js"],"names":["module","exports","TagIndexPage","TagPage","props","react_default","a","createElement","className","styles","tags","map","tag","key","href","dist_es","name","count","_ref","blogRoot","routes","route","url","ArticleSummary","crawlRoutes","_callee4","root","_ref2","paths","regenerator_default","wrap","_context4","prev","next","cache","crawl","context","crawlingRoutes","sent","resolve","method","urls","abrupt","stop","tagRoutes","compose","withContext","req","_objectSpread","tagsRoot","mountpath","withCrawlerPatterns","/:tag","_tag","Object","asyncToGenerator","mark","_callee","_context","t0","getAvailableTagsFromRoutes","t1","t2","_x2","_x3","apply","this","arguments","mount","/","title","getView","_getView","_callee2","_context2","fromPairs","toLowerCase","forEach","data","push","components_TagIndexPage","join","length","_x4","_x5","getTitle","params","_getView2","_callee3","lowerCaseTag","_context3","find","metaTag","components_TagPage","_x6","_x7","Array","from","Set","concat","toConsumableArray"],"mappings":"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","file":"static/js/4.0bda2c92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagIndexPage\":\"TagIndexPage_TagIndexPage__37YPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagPage\":\"TagPage_TagPage__2kuFB\"};","import React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './TagIndexPage.module.css'\n\nfunction TagIndexPage(props) {\n  return (\n    <div className={styles.TagIndexPage}>\n      <h1>Tags</h1>\n      <ul>\n        {props.tags.map(tag =>\n          <li key={tag.href}>\n            <Link href={tag.href}>{tag.name} ({tag.count})</Link>\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default TagIndexPage","import React from 'react'\nimport ArticleSummary from './ArticleSummary'\nimport styles from './TagPage.module.css'\n\nfunction TagPage({ blogRoot, name, routes }) {\n  return (\n    <div className={styles.TagPage}>\n      <h1>{name} posts</h1>\n      <ul>\n        {routes.map(route =>\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot + \"blog\"} route={route} />\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default TagPage","import React from 'react'\nimport { compose, crawl, mount, resolve, route, withContext, withCrawlerPatterns } from 'navi'\nimport { join } from 'path'\nimport { fromPairs } from 'lodash'\nimport TagIndexPage from '../components/TagIndexPage'\nimport TagPage from '../components/TagPage'\nimport routes from './index'\n\nasync function crawlRoutes(root) {\n  if (!crawlRoutes.cache[root]) {\n    let { paths } = await crawl({\n      context: {\n        crawlingRoutes: true,\n      },\n      root,\n      routes,\n    })\n    crawlRoutes.cache[root] = await resolve({\n      method: 'HEAD',\n      routes,\n      urls: paths,\n    }) \n  }\n  return crawlRoutes.cache[root]\n}\ncrawlRoutes.cache = {}\n\nconst tagRoutes = compose(\n  withContext((req, context) => ({\n    ...context,\n    tagsRoot: req.mountpath,\n  })),\n  withCrawlerPatterns({\n    '/:tag': async (req, context) => {\n      if (!context.crawlingRoutes) {\n        return getAvailableTagsFromRoutes(\n          await crawlRoutes(context.blogRoot)\n        ).map(tag => '/'+tag)\n      }\n      return []\n    }\n  }),\n  mount({\n    '/': route({\n      title: 'Tags',\n\n      getView: async (req, context) => {\n        // Build a list of pages for each tag\n        let routes = await crawlRoutes(context.blogRoot)\n        let tags = getAvailableTagsFromRoutes(routes)\n        let tagRoutes = fromPairs(tags.map(name => [name.toLowerCase(), []]))\n        routes.forEach(route => {\n          let data = route.data\n          if (data && data.tags) {\n            data.tags.forEach(tag => {\n              tag = tag.toLowerCase()\n              if (tagRoutes[tag]) {\n                tagRoutes[tag].push(route)\n              }\n            })\n          }\n        })\n\n        return (\n          <TagIndexPage\n            blogRoot={context.blogRoot}\n            tags={tags.map(name => ({\n              name,\n              href: join(req.mountpath, name.toLowerCase()),\n              count: (tagRoutes[name] || []).length,\n            }))}\n          />\n        )\n      },\n    }),\n\n    '/:tag': route({\n      getTitle: req => req.params.tag,\n      getView: async (req, context) => {\n        let lowerCaseTag = req.params.tag.toLowerCase()\n        let routes = await crawlRoutes(context.blogRoot)\n\n        // Build a list of pages that include the tag from the site map\n        let tagRoutes = []\n        routes.forEach(route => {\n          let tags = (route.data && route.data.tags) || []\n          if (tags.find(metaTag => metaTag.toLowerCase() === lowerCaseTag)) {\n            tagRoutes.push(route)\n          }\n        })\n\n        return (\n          <TagPage\n            blogRoot={context.blogRoot}\n            name={req.params.tag}\n            routes={tagRoutes}\n          />\n        )\n      },\n    }),\n  }),\n)\n\nfunction getAvailableTagsFromRoutes(routes) {\n  return Array.from(\n    new Set(\n      [].concat(...routes.map(route => (route.data && route.data.tags) || [])),\n    ),\n  )\n}\n\nexport default tagRoutes\n"],"sourceRoot":""}